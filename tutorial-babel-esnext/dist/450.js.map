{"version":3,"sources":["webpack://tutorial-babel-esnext/./src/sub.js"],"names":["Hello","message","console","log","arr","includes","numList","Promise","all","map","id","numList2","str","padEnd","i","resolve","forEach","restParam","p1","p2","p3","match","exec","year","month","day","MyClass","show","flat","flatMap","food","Object","fromEntries","Error","warn","fuga","hoge","replaceAll"],"mappings":"uyBAAO,IAAMA,EAAb,mGAEE,WAAUC,GAAV,2HAEIC,QAAQC,IAAI,uBACZD,QAAQC,IAAR,UAAeF,EAAf,YAIAC,QAAQC,IAAI,qBACZD,QAAQC,IAAR,SAAY,EAAK,IACjBD,QAAQC,IAAR,SAAY,EAAK,IACjBD,QAAQC,IAAR,SAAY,EAAK,KAGjBD,QAAQC,IAAI,gCACNC,EAAM,CAAC,OAAQ,OAAQ,QAC7BF,QAAQC,IAAIC,EAAIC,SAAS,SACzBH,QAAQC,IAAIC,EAAIC,SAAS,SAIzBH,QAAQC,IAAI,+BAENG,EAAU,CAAC,EAAG,EAAG,GAtB3B,UAuB2BC,QAAQC,IAAIF,EAAQG,KAAI,SAACC,GAAD,OAAa,EAALA,MAvB3D,QAuBUC,EAvBV,OAwBIT,QAAQC,IAAIQ,GAIZT,QAAQC,IAAI,4CACNS,EAAM,OACZV,QAAQC,IAAIS,EAAIC,OAAO,GAAI,SAC3BX,QAAQC,IAAIS,EAAIC,OAAO,EAAG,SAI1BX,QAAQC,IAAI,qCAGNG,EAAU,CAAC,EAAG,EAAG,GAtC3B,qIAuCaQ,EAvCb,cAwCY,IAAIP,SAAQ,SAACQ,GACjBb,QAAQC,IAAIW,GACZC,OA1CR,gDAuCkBT,EAvClB,wHA8CIA,EAAQU,QAAR,4CAAgB,WAAOF,GAAP,gGACR,IAAIP,SAAQ,SAACQ,GACjBb,QAAQC,IAAIW,GACZC,OAHY,2CAAhB,uDAYSE,EAAT,SAAmBC,EAAIC,GACrBjB,QAAQC,IAAIe,GACZhB,QAAQC,IAAIgB,GAFoB,2BAAJC,EAAI,iCAAJA,EAAI,kBAGhClB,QAAQC,IAAIiB,IAPdlB,QAAQC,IAAI,qCAEZc,EAAU,EAAG,EAAG,EAAG,EAAG,GAStBf,QAAQC,IAAI,sDAGNkB,EADS,mCACMC,KAAK,cAEpBC,EAAOF,EAAM,GACbG,EAAQH,EAAM,GACdI,EAAMJ,EAAM,GAElBnB,QAAQC,IAAIoB,GACZrB,QAAQC,IAAIqB,GACZtB,QAAQC,IAAIsB,GA5EhB,WAgFqB,IAAIC,GACZC,OAETzB,QAAQC,IAAI,uBAEZD,QAAQC,IAAI,CAAC,CAAC,EAAG,GAAI,EAAG,GAAGyB,QAC3B1B,QAAQC,IACN,CAAC,IAAK,IAAK,OAAO0B,SAAQ,SAACC,GAAD,MAAU,CAACA,EAAD,UAAUA,EAAV,UAGtC5B,QAAQC,IAAI,8BACZD,QAAQC,IACN4B,OAAOC,YAAY,CACjB,CAAC,KAAM,IACP,CAAC,OAAQ,SA9FjB,UAmGY,IAAIC,MAAM,MAnGtB,mCAsGM/B,QAAQgC,KAAK,sBAtGnB,2DA4GIhC,QAAQC,IAAI,oCA5GhB,QAiHUgC,EAjHV,UAgHmB,GACKC,YAjHxB,aAiHiB,EAAaD,KAC1BjC,QAAQC,IAAI,2BAA4BgC,GAIlCvB,EAAM,aAAayB,WAAW,KAAM,MAC1CnC,QAAQC,IAAI,8BAA+BS,GAI3CV,QAAQC,IAAI,sBADC,KA1HjB,mEAFF,qDAkIMuB,E,WAGJ,aAAc,U,8BAEd,gB","file":"450.js","sourcesContent":["export class Hello {\n  /** 非同期指定で呼び出します。 */\n  async say(message) {\n    {\n      console.log(\"💜ES2015 - テンプレート構文\");\n      console.log(`${message}を出力しました`);\n    }\n\n    {\n      console.log(\"💛ES2016 - べき乗の検証\");\n      console.log(3 ** 2); // 9\n      console.log(2 ** 8); // 256\n      console.log(2 ** 10); // 1024\n    }\n    {\n      console.log(\"💛ES2016 - Array.include の検証\");\n      const arr = [\"hoge\", \"fuga\", \"piyo\"];\n      console.log(arr.includes(\"hoge\")); // true\n      console.log(arr.includes(\"moja\")); // false\n    }\n\n    {\n      console.log(\"💚ES2017 - async, await の検証\");\n\n      const numList = [1, 2, 3];\n      const numList2 = await Promise.all(numList.map((id) => id * 2));\n      console.log(numList2); // [2, 4, 6]\n    }\n\n    {\n      console.log(\"💚ES2017 - String.prototype.padEnd() の検証\");\n      const str = \"moja\";\n      console.log(str.padEnd(10, \"hoge\")); // mojahogeho\n      console.log(str.padEnd(5, \"piyo\")); // mojap\n    }\n\n    {\n      console.log(\"💙ES2018 - Asynchronous Iteration\");\n\n      // ES2018 : async, await の検証\n      const numList = [1, 2, 3];\n      for (let i of numList) {\n        await new Promise((resolve) => {\n          console.log(i);\n          resolve();\n        });\n      }\n\n      numList.forEach(async (i) => {\n        await new Promise((resolve) => {\n          console.log(i);\n          resolve();\n        });\n      });\n    }\n    {\n      console.log(\"💙ES2018 - Rest/Spread Properties\");\n\n      restParam(1, 2, 3, 4, 5);\n\n      function restParam(p1, p2, ...p3) {\n        console.log(p1); // 1\n        console.log(p2); // 2\n        console.log(p3); // [3, 4, 5]\n      }\n    }\n    {\n      console.log(\"💙ES2018 - Regular Expression Named Capture Groups\");\n\n      const reDate = /([0-9]{4})-([0-9]{2})-([0-9]{2})/;\n      const match = reDate.exec(\"2018-04-30\");\n\n      const year = match[1]; // 2018\n      const month = match[2]; // 04\n      const day = match[3]; // 30\n\n      console.log(year); // 2018\n      console.log(month); // 04\n      console.log(day); // 30\n    }\n\n    try {\n      const instance = new MyClass();\n      instance.show();\n\n      console.log(\"💗️ES2019 - flatの検証\");\n\n      console.log([[1, 2], 3, 4].flat()); // 結果：[1, 2, 3, 4]\n      console.log(\n        [\"牛\", \"豚\", \"マグロ\"].flatMap((food) => [food, `${food}丼`])\n      ); // 結果：[\"牛\", \"牛丼\", \"豚\", \"豚丼\", \"マグロ\", \"マグロ丼\"]\n\n      console.log(\"💗️ES2019 - fromEntriesの検証\");\n      console.log(\n        Object.fromEntries([\n          [\"id\", 16],\n          [\"name\", \"鈴木\"],\n        ])\n      );\n\n      try {\n        throw new Error(\"🙅\");\n      } catch {\n        // (error)の指定は必須\n        console.warn(\"💗️ES2019 - エラーの省略\");\n      }\n    } catch (error) {\n      // IE11向けにはArray#flat()はポリフィルでも利用できない\n      // https://github.com/babel/babel/issues/9749#issuecomment-475686062\n      // core-js@3を利用する方法も案としてあげられるが、別の問題がつきまとい現実的ではない\n      console.log(\"[NG] ES2019 - flatの検証は利用できませんでした\");\n    }\n\n    {\n      const object = {};\n      const fuga = object.hoge?.fuga;\n      console.log(\"💗️ES2020 - オプショナルチェイニング\", fuga);\n    }\n\n    {\n      const str = '田中家の田中一郎です'.replaceAll(\"田中\", \"鈴木\");\n      console.log(\"😊ES2021 - replaceAll()メソッド\", str);\n    }\n    {\n      const num1 = 1_000_000_000; // 10億（1,000,000,000）\n      console.log(\"😊ES2021 - 数値の _ 記号\", num1);\n    }\n  }\n}\n\nclass MyClass {\n  // hoge = '💗ES2019 - メンバーフィールドの検証';\n\n  constructor() {}\n\n  show() {\n    // console.log(this.hoge);\n  }\n}\n"],"sourceRoot":""}